{"version":3,"sources":["component/Yangiliklar/Yangiliklar.module.css","component/Dialogs/Dialogs.module.css","component/Profile/MyPosts/MyPosts.module.css","component/Navbar/Navbar.module.css","assets/image/amiftIcon.jpg","component/UstozlarJamoasi/UstozlarJamoasi.module.css","component/Kutubxona/Kutubxona.module.css","component/OnlainDarslar/OnlainDarslar.module.css","component/IshJoylari/IshJoylari.module.css","component/Profile/ProfileInfo/ProfileInfo.module.css","component/Profile/MyPosts/Post/Post.module.css","assets/gif/Loading.gif","component/SignIn/SignIn.module.css","component/SignUp/SignUp.module.css","component/Navbar/Navbar.js","component/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","component/Profile/MyPosts/Post/Post.jsx","component/Profile/MyPosts/MyPosts.jsx","component/Profile/MyPosts/MyPostsContainer.jsx","component/Profile/Profile.jsx","redux/yangiliklar-reducer.js","component/Yangiliklar/Yangiliklar.js","component/Yangiliklar/YangiliklarContainer.js","redux/diologs-reducer.js","component/Dialogs/DialogItem/DialogItem.jsx","component/Dialogs/Message/Message.jsx","component/Dialogs/Dialogs.jsx","component/Dialogs/DialogsContainer.jsx","component/SignIn/SignIn.js","component/SignUp/SignUp.js","App.js","serviceWorker.js","redux/redux-store.js","index.js"],"names":["module","exports","Navbar","datchikComponent","React","createRef","className","to","src","photo","s","image","alt","type","onClick","current","ref","id","width","ProfileInfo","descriptionBlock","initialState","posts","message","likesCount","newPostText","profileReducer","state","action","messege","stateCopy","push","newText","Post","props","item","MyPosts","postsElements","map","p","newAddPost","postsBlock","onChange","text","value","onChangeClick","newPost","MyPostsContainer","connect","profilePage","dispatch","props1","Profile","mainContaint","totalCount","PageSize","currentPage","isFetching","yangiliklarReducer","e","followed","users","page","bool","Yangiliklar","PageCount","Math","ceil","Pages","i","fontSize","q","activPage","onChangePage","loding","console","log","yangiliklar","postCard","userTextColor","name","dateTextColor","photos","small","imageSize","postTextSize","Unfollow","follow","iconSize","commentCount","Yangiliklarq","setCurrentPage","isFetchinga","axios","then","response","setUser","data","items","this","setUserTotalCount","Component","YangiliklarContainer","FollowActionCreater","UnFollowActionCreater","user","dialogs","messages","newMessage","diologsReducer","DialogItem","path","dialog","active","Message","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","onChangeMessage","target","addMessage","DialogsContainer","dialogsPage","SignIn","Users","SignUp","App","render","component","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.3a313d32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Yangiliklar\":\"Yangiliklar_Yangiliklar__QSh5F\",\"postCard\":\"Yangiliklar_postCard__1y7xd\",\"postTextSize\":\"Yangiliklar_postTextSize__CnEyz\",\"fontSize\":\"Yangiliklar_fontSize__1Jio4\",\"imageSize\":\"Yangiliklar_imageSize__2OCGS\",\"activPage\":\"Yangiliklar_activPage__1y1zp\",\"userTextColor\":\"Yangiliklar_userTextColor__1e_Rh\",\"dateTextColor\":\"Yangiliklar_dateTextColor__3UDAX\",\"iconSize\":\"Yangiliklar_iconSize__2whL4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__OWas0\",\"dialogsItems\":\"Dialogs_dialogsItems__2NDHo\",\"active\":\"Dialogs_active__YR1HF\",\"messages\":\"Dialogs_messages__31c8i\",\"message\":\"Dialogs_message___yJdd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3e1wZ\",\"posts\":\"MyPosts_posts__17NLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Navbar_image__1mPQ8\",\"iconLogin\":\"Navbar_iconLogin__3z6Qi\"};","module.exports = __webpack_public_path__ + \"static/media/amiftIcon.b1c68a6b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UstozlarJamoasi\":\"UstozlarJamoasi_UstozlarJamoasi__2Wzbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Kutubxona\":\"Kutubxona_Kutubxona__3wwWg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OnlainDarslar\":\"OnlainDarslar_OnlainDarslar__2_ZT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IshJoylari\":\"IshJoylari_IshJoylari__1szRL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3JNDG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2r1pV\"};","module.exports = __webpack_public_path__ + \"static/media/Loading.104f6142.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"SignIn_Users__2xg_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"SignUp_Users__3sIxK\"};","import React from \"react\";\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport photo from '../../assets/image/amiftIcon.jpg'\r\n\r\nconst Navbar = () => {\r\n\r\n    let datchikComponent=React.createRef()\r\n    let datchik=()=>{\r\n        if(datchikComponent.current.className=='collapse navbar-collapse '){\r\n            datchikComponent.current.className='collapse navbar-collapse show '\r\n        }\r\n        else{\r\n            datchikComponent.current.className='collapse navbar-collapse '\r\n        }\r\n    }\r\n\r\n    return (<div>\r\n        <nav className=\"navbar navbar-expand-md\">\r\n\r\n                <NavLink to=\"/#\" className='navbar-brand'><img src={photo} className={s.image} alt=\"aa\"/></NavLink>\r\n            <button className=\"navbar-toggler \" type=\"button\" onClick={datchik}>\r\n                <span className=\"\">\r\n                    <img src=\"https://marvel-live.freetls.fastly.net/canvas/2020/8/62b62409a3544aa88e478967592b8e44?quality=95&fake=.png&width=54\" alt=\"\"/>\r\n                </span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" ref={datchikComponent} id=\"collapsibleNavbar\">\r\n            <ul className=\"navbar-nav align-items-center w-100\">\r\n                <li className=\"nav-item\" ><NavLink to=\"/yangiliklar\" className=\"nav-link\">Yangiliklar</NavLink></li>\r\n                <li className=\"nav-item\" ><NavLink to=\"/UstozlarJamoasi\" className=\"nav-link\">UstozlarJamoasi</NavLink></li>\r\n                <li className=\"nav-item\" ><NavLink to=\"/Kutubxona\" className=\"nav-link\">Kutubxona</NavLink></li>\r\n                <li className=\"nav-item\" ><NavLink to=\"/OnlainDarslar\" className=\"nav-link\">OnlainDarslar</NavLink></li>\r\n                <li className=\"nav-item\" ><NavLink to=\"/IshJoylari\" className=\"nav-link\">IshJoylari</NavLink></li>\r\n                <li className=\"nav-item\" ><NavLink to=\"/dialogs\" className=\"nav-link\">dialogs</NavLink></li>\r\n                <li className=\"nav-item\" ><NavLink to=\"/profile\" className=\"nav-link\">profile</NavLink></li>\r\n\r\n\r\n\r\n    <li className='nav-item ml-0 ml-md-auto' ><NavLink to=\"/SignUp\" className='nav-link'><button type={'button'} className='btn btn-success'>Sign Up</button>\r\n    </NavLink></li>\r\n    <li className='nav-item'><NavLink to=\"/SignIn\" className='nav-link'><button type={'button'} className='btn btn-danger'>Sign In</button>\r\n    </NavLink></li>\r\n\r\n\r\n            </ul>\r\n            </div>\r\n\r\n\r\n        </nav>\r\n        <hr width='100%' />\r\n        </div>\r\n    );\r\n}\r\nexport default Navbar\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","const ADD_MESSAGE='ADD-MESSAGE'\r\nconst EDIT_TEXT='EDIT-TEXT'\r\n\r\nlet initialState={\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ]\r\n        , newPostText: 'Abdulaziz'\r\n}\r\nconst profileReducer=(state=initialState,action)=>{\r\n\r\n\r\n    if (action.type === ADD_MESSAGE) {\r\n        let messege = {\r\n            id: 5,\r\n            message:state.newPostText,\r\n            likesCount: 0\r\n        };\r\nlet stateCopy={...state}\r\n\r\nstateCopy.posts=[...state.posts]\r\n        stateCopy.newPostText = ''\r\n        stateCopy.posts.push(messege);\r\n        return stateCopy\r\n\r\n    }\r\n    if (action.type === EDIT_TEXT) {\r\n        let stateCopy={...state}\r\n\r\n        stateCopy.newPostText = action.newText;\r\n        return stateCopy\r\n\r\n    }\r\nreturn state\r\n\r\n\r\n\r\n}\r\nexport const addMessageActionCreator = () => ({\r\n    type: ADD_MESSAGE,\r\n\r\n})\r\nexport const editTextActionCreator = (text) => ({\r\n    type: EDIT_TEXT,\r\n    newText: text\r\n})\r\nexport default profileReducer\r\n\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n    let newAddPost = React.createRef();\r\n\r\n    let newPost = () => {\r\n\r\nprops.newPost()\r\n\r\n\r\n\r\n    }\r\n    const onChangeClick=()=>{\r\n        let text=newAddPost.current.value;\r\n        props.onChangeClick(text)\r\n\r\n\r\n\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea ref={newAddPost} onChange={onChangeClick} value={props.newPostText}></textarea>\r\n                </div>\r\n                <div>\r\n                    <button onClick={newPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addMessageActionCreator, editTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    debugger\r\n    return{\r\n\r\n        newPostText:state.profilePage.newPostText,\r\n        posts:state.profilePage.posts\r\n    }\r\n}\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        newPost:()=>{dispatch(addMessageActionCreator())},\r\n        onChangeClick:(props1)=>{dispatch(editTextActionCreator(props1))}\r\n    }\r\n}\r\n\r\nconst MyPostsContainer=connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\n\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","let FOLLOW = 'FOLLOW'\r\nlet UNFOLLOW = 'UN_FOLLOW'\r\nlet SET_USER = 'SET_USER'\r\nlet SET_USER_TOTAL_COUNT = 'SET_USER_TOTAL_COUNT'\r\nlet SET_CURRENT_PAGE='SET_CURRENT_PAGE'\r\nlet IS_FETCHING='IS_FETCHING'\r\n\r\n\r\n\r\nlet initialState = {\r\n    mainContaint: [],\r\n    totalCount:0,\r\n    PageSize:10,\r\n    currentPage:1,\r\n    isFetching:false\r\n\r\n}\r\n\r\nconst yangiliklarReducer = (state = initialState, action = null) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            let stateCopy = {\r\n                ...state,\r\n                mainContaint: state.mainContaint.map(e => {\r\n                    if (e.id == action.id) {\r\n                        return {...e, followed: true}\r\n                    }\r\n                    return e\r\n                })\r\n            }\r\n            return stateCopy\r\n        }\r\n        case UNFOLLOW: {\r\n            let stateCopy = {\r\n                ...state,\r\n                mainContaint: state.mainContaint.map(e => {\r\n                    if (e.id == action.id) {\r\n                        return {...e, followed: false}\r\n                    }\r\n                    return e\r\n                })\r\n            }\r\n            return stateCopy\r\n\r\n        }\r\n        case SET_USER: {\r\n           let stateCopy = {\r\n                ...state,\r\n                mainContaint: action.users\r\n            }\r\n            return stateCopy\r\n        }\r\n        case SET_USER_TOTAL_COUNT:{\r\n        state.totalCount=action.totalCount\r\n            return state\r\n        }\r\n        case SET_CURRENT_PAGE:{\r\n            state.currentPage=action.page\r\n            return state\r\n        }\r\n        case IS_FETCHING:{\r\n            state.isFetching=action.bool\r\n            return state\r\n        }\r\n\r\n\r\n\r\n        default :\r\n            return state\r\n\r\n\r\n    }\r\n\r\n}\r\nexport const FollowActionCreater = (id) => {\r\n    return {\r\n        type: FOLLOW,\r\n        id: id\r\n    }\r\n}\r\nexport const UnFollowActionCreater = (id) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        id: id\r\n    }\r\n}\r\nexport const setUserActionCreater = (users) => {\r\n    return {\r\n        type: SET_USER,\r\n        users\r\n    }\r\n\r\n}\r\nexport const setUserTotalCount=(totalCount)=>{\r\n   return { type:SET_USER_TOTAL_COUNT,\r\n        totalCount:totalCount}\r\n}\r\nexport const setCurrentPage=(page)=>{\r\n    return{\r\n        type:SET_CURRENT_PAGE,\r\n        page:page\r\n    }\r\n}\r\nexport const isFetching=(bool)=>{\r\n    return{\r\n        type:IS_FETCHING,\r\n        bool:bool\r\n    }\r\n}\r\n\r\n\r\nexport default yangiliklarReducer","import React from \"react\";\r\nimport s from './Yangiliklar.module.css'\r\nimport loding from '../../assets/gif/Loading.gif'\r\n\r\n\r\nconst Yangiliklar = (props) => {\r\n    let PageCount = Math.ceil(props.totalCount / props.PageSize)\r\n    let Pages = []\r\n    for (let i = 1; i <= PageCount; i++) {\r\n        Pages.push(i)\r\n    }\r\n    return <div className={s.Yangiliklar}>\r\n        <div className={s.fontSize}>Postlar</div>\r\n\r\n        <div className=\"col-md-8\">\r\n\r\n\r\n            {Pages.map(q => {\r\n                if (q <= 10) {\r\n                    return <span className={q == props.currentPage ? s.activPage : 'px-1'} onClick={() => {\r\n                        props.onChangePage(q)\r\n                    }}>{q}</span>\r\n                }\r\n\r\n            })}\r\n            {props.isFetching!=true? <img src={loding} alt=\"\"/>:null}\r\n            {console.log(props)}\r\n            {props.yangiliklar.mainContaint.map(e => <div className='col-md-12 mb-5'>\r\n                <div className={s.postCard}>\r\n                    <div className=\"pl-2\">\r\n                        <div><span className={s.userTextColor}>User:</span>{e.name}</div>\r\n                        <div><span className={s.dateTextColor}>Date:</span></div>\r\n                        <div className=\"mt-4\"><img\r\n                            src={e.photos.small != null ? e.photos.small : 'https://www.talkwalker.com/images/2020/blog-headers/image-analysis.png'}\r\n                            className={s.imageSize}/></div>\r\n                    </div>\r\n                    <div className={s.postTextSize}>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"mt-3\">\r\n\r\n                    {e.followed ? <button type='button' className='btn btn-danger'\r\n                                          onClick={() => props.Unfollow(e.id)}>UnFollow</button> :\r\n                        <button type='button' className='btn btn-success'\r\n                                onClick={() => props.follow(e.id)}>Follow</button>\r\n\r\n\r\n                    }\r\n\r\n\r\n                    <span className='float-right'><img\r\n                        src=\"https://marvel-live.freetls.fastly.net/canvas/2020/8/9b1c6680c6fd4e2fad7ea497baac16aa?quality=95&fake=.png&width=54\"\r\n                        alt=\"\" className={s.iconSize}/> like {e.likesCount}</span>\r\n                    <span className='float-right px-5'><img\r\n                        src=\"https://marvel-live.freetls.fastly.net/canvas/2020/8/23d042048fc74e69a945443872677f36?quality=95&fake=.png&width=54\"\r\n                        alt=\"\" className={s.iconSize}/> comment {e.commentCount}</span>\r\n\r\n                </div>\r\n\r\n            </div>)}\r\n        </div>\r\n\r\n    </div>;\r\n}\r\n\r\nexport default Yangiliklar","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    FollowActionCreater, isFetching, setCurrentPage,\r\n    setUserActionCreater,\r\n    setUserTotalCount,\r\n    UnFollowActionCreater\r\n} from \"../../redux/yangiliklar-reducer\";\r\nimport Yangiliklar from \"./Yangiliklar\";\r\nimport * as axios from \"axios\";\r\n\r\nclass Yangiliklarq extends React.Component {\r\n    componentDidMount() {\r\nthis.props.isFetchinga(false)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.PageSize}`).then(response => {\r\n            this.props.isFetchinga(true)\r\n            this.props.setUser(response.data.items);\r\n            this.props.setUserTotalCount(response.data.totalCount)\r\n        })\r\n    }\r\n\r\n    onChangePage = (q) => {\r\n        this.props.setCurrentPage(q)\r\n        this.props.isFetchinga(false)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${q}&count=${this.props.PageSize}`).then(response => {\r\n            this.props.isFetchinga(true)\r\n            this.props.setUser(response.data.items);\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return <Yangiliklar\r\n            onChangePage={this.onChangePage}\r\n            totalCount={this.props.totalCount}\r\n            PageSize={this.props.PageSize}\r\n            currentPage={this.props.currentPage}\r\n            yangiliklar={this.props.yangiliklar}\r\n            Unfollow={this.props.Unfollow}\r\n            follow={this.props.follow}\r\n            isFetching={this.props.isFetching}\r\n        />\r\n    }\r\n}\r\nlet mapStateToProps=(state)=>{\r\nconsole.log(state)\r\n    return{\r\n        yangiliklar:state.yangiliklar,\r\n        totalCount:state.yangiliklar.totalCount,\r\n        PageSize:state.yangiliklar.PageSize,\r\n        currentPage:state.yangiliklar.currentPage,\r\n        isFetching:state.yangiliklar.isFetching\r\n    }\r\n}\r\nlet mapDispatchToProps=(dispatch)=>{\r\n\r\n    return{\r\n        follow:(id)=>dispatch(FollowActionCreater(id)),\r\n        Unfollow:(id)=>dispatch(UnFollowActionCreater(id)),\r\n        setUser:(user)=>dispatch(setUserActionCreater(user)),\r\n        setUserTotalCount:(totalCount)=>dispatch(setUserTotalCount(totalCount)),\r\n        setCurrentPage:(page)=>dispatch(setCurrentPage(page)),\r\n        isFetchinga:(bool)=>dispatch(isFetching(bool))\r\n\r\n\r\n    }\r\n\r\n}\r\nconst YangiliklarContainer=connect(mapStateToProps,mapDispatchToProps)(Yangiliklarq)\r\nexport default YangiliklarContainer","const EDIT_DIOLOGS='EDIT-DIOLOGS'\r\nconst ADD_DIOLOGS='ADD-DIOLOGS'\r\n\r\n\r\nlet initialState={\r\n    dialogs: [\r\n        {id: 1, name: 'Sardor'},\r\n        {id: 2, name: 'Dilshod'},\r\n        {id: 3, name: 'Sanjar'},\r\n        {id: 4, name: 'Avaz'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n    newMessage: '',\r\n}\r\n\r\nconst diologsReducer=(state=initialState,action)=>{\r\n    let stateCopy={\r\n        ...state\r\n\r\n    }\r\n    if(action.type===EDIT_DIOLOGS){\r\n        stateCopy.newMessage=action.text\r\n\r\n    }\r\n    if(action.type===ADD_DIOLOGS){\r\n\r\n        stateCopy.messages.push({\r\n            id:6,\r\n            message:state.newMessage\r\n\r\n        })\r\n        stateCopy.newMessage=''\r\n\r\n\r\n    }\r\n\r\n    return stateCopy\r\n}\r\nexport const editDialogsActionCreator = (text) => ({\r\n    type: EDIT_DIOLOGS,\r\n    text: text\r\n\r\n})\r\nexport const addDialogsActionCreator = (text) => ({\r\n    type: ADD_DIOLOGS,\r\n\r\n\r\n})\r\nexport default diologsReducer","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\r\n    let messagesElements = props.state.messages.map(m => <Message message={m.message}/>);\r\n    const addMessage = () => {\r\nprops.addMessage()\r\n    }\r\n    const onChangeMessage=(e)=>{\r\n        props.onChangeMessage(e.target.value)\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n\r\n\r\n            </div>\r\n            <div>\r\n                <textarea  onChange={onChangeMessage} value={props.state.newMessage}></textarea>\r\n\r\n            </div>\r\n            <div>\r\n                <button type='button' onClick={addMessage}>add</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {addDialogsActionCreator, editDialogsActionCreator} from \"../../redux/diologs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        state: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    console.log(dispatch)\r\n    return{\r\n        addMessage:() => dispatch(addDialogsActionCreator()),\r\n        onChangeMessage:(e) => dispatch(editDialogsActionCreator(e))\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n\r\nexport default DialogsContainer;","import React from \"react\";\r\nimport s from './SignIn.module.css'\r\n\r\nconst SignIn =()=>{\r\n    return (\r\n        <div className={s.Users}>\r\n\r\n            blablaqqq\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default SignIn","import React from \"react\";\r\nimport s from './SignUp.module.css'\r\n\r\nconst SignUp =()=>{\r\n    return (\r\n        <div className={s.Users}>\r\n\r\n            blabla\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default SignUp","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Navbar from \"./component/Navbar/Navbar\";\nimport {BrowserRouter, Route,} from \"react-router-dom\";\nimport UstozlarJamoasi from \"./component/UstozlarJamoasi/UstozlarJamoasi\";\nimport Kutubxona from \"./component/Kutubxona/Kutubxona\";\nimport OnlainDarslar from \"./component/OnlainDarslar/OnlainDarslar\";\nimport IshJoylari from \"./component/IshJoylari/IshJoylari\";\nimport Profile from \"./component/Profile/Profile\";\nimport YangiliklarContainer from \"./component/Yangiliklar/YangiliklarContainer\";\nimport DialogsContainer from \"./component/Dialogs/DialogsContainer\";\nimport SignIn from \"./component/SignIn/SignIn\";\nimport SignUp from \"./component/SignUp/SignUp\";\n\n\n\nfunction App(props) {\n\n    return <BrowserRouter>\n        <div className='container-fluid'>\n            <Navbar/>\n            <Route path='/yangiliklar' render={()=><YangiliklarContainer />}/>\n            {/*<Route path='/UstozlarJamoasi' render={()=><UstozlarJamoasi/>}/>*/}\n            {/*<Route path='/Kutubxona' render={()=><Kutubxona />}/>*/}\n            {/*<Route path='/OnlainDarslar' render={()=><OnlainDarslar />}/>*/}\n            {/*<Route path='/IshJoylari' render={()=><IshJoylari />}/>*/}\n            <Route path='/dialogs'\n                   render={ () => <DialogsContainer/> }/>\n            <Route path='/profile'\n                   render={ () => <Profile/> }/>\n            <Route path='/SignIn' component={SignIn}/>\n            <Route path='/SignUp' component={SignUp}/>\n\n        </div>\n    </BrowserRouter>\n\n        ;\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport diologsReducer from \"./diologs-reducer\";\r\nimport yangiliklarReducer from \"./yangiliklar-reducer\";\r\nlet reducers=combineReducers({\r\n    profilePage:profileReducer,\r\n    dialogsPage:diologsReducer,\r\n    yangiliklar: yangiliklarReducer\r\n})\r\n\r\nlet store=createStore(reducers)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n            <App />\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}